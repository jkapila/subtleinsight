{"title":"Linear methods of Classification","markdown":{"yaml":{"title":"Linear methods of Classification","subtitle":"Some learning from The Elements of Statitical Learning by Hastie, Tibshirani Friedman 2nd ed","description":"Not replicating but finding ways to implement it in python from scratch","license":"CC BY","author":[{"name":"Jitin Kapila","url":"https://www.jitinkapila.com"}],"citation":true,"date":"2022-09-02","format":{"html":{"toc":true,"code-fold":true,"html-math-method":"webtex","fig-cap-location":"bottom","cap-location":"bottom"}},"execute":{"eval":false,"echo":true,"warning":true},"title-block-banner":true,"image":"https://unsplash.com/photos/fUnfEz3VLv4/download?force=true&w=1920","image-alt":"Image by [_Graham_](https://unsplash.com/@freedomstudios) at [Unsplash](https://unsplash.com/)","categories":["classification","linear methods","python","implementation"],"tags":["hypothesis","linear methods","implementation"],"keywords":["classification","linear methods","python","implementation","scratch implementation","analysis","tests","datascience"],"jupyter":"python3","freeze":true,"filters":["lightbox"],"lightbox":"auto"},"headingText":"This is normal qmd file","containsRefs":false,"markdown":"\n\n\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n```{python}\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n# hope new work would come here\n\nasn dsome more text\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"include-after-body":["../../plausible.html"],"filters":["lightbox"],"toc":true,"html-math-method":"webtex","output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.179","theme":{"light":"litera","dark":"darkly"},"title-block-banner":true,"title":"Linear methods of Classification","subtitle":"Some learning from The Elements of Statitical Learning by Hastie, Tibshirani Friedman 2nd ed","description":"Not replicating but finding ways to implement it in python from scratch","license":"CC BY","author":[{"name":"Jitin Kapila","url":"https://www.jitinkapila.com"}],"citation":true,"date":"2022-09-02","image":"https://unsplash.com/photos/fUnfEz3VLv4/download?force=true&w=1920","image-alt":"Image by [_Graham_](https://unsplash.com/@freedomstudios) at [Unsplash](https://unsplash.com/)","categories":["classification","linear methods","python","implementation"],"tags":["hypothesis","linear methods","implementation"],"keywords":["classification","linear methods","python","implementation","scratch implementation","analysis","tests","datascience"],"jupyter":"python3","lightbox":"auto","fig-cap-location":"bottom","cap-location":"bottom"},"extensions":{"book":{"multiFile":true}}}}}